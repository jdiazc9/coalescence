for (sample in unique(plot_this$sample)) {
n <- plot_this$carbon_source==cs & plot_this$community==comm & plot_this$sample==sample
plot_this$rank[n] <- rank(1 - plot_this$fraction[n],ties.method='random')
}
}
}
plot_this$rank[plot_this$fraction < 1e-4] <- NA
# plot: color palette
set.seed(23) # this gives the nicest colors in the pie plots
pl <- brewer.pal(8, "Set1")
pl <- sample(colorRampPalette(pl)(nrow(otus)))
pl_carbon <- c('#d7191c','#2c7bb6')
names(pl_carbon) <- carbon_sources
# show fractions in pies
plot_this$label <- paste(100*round(plot_this$fraction,digits=2),'%',sep='')
plot_this$label[plot_this$fraction < 0.1] <- ' '
# fraction labels positioning
plot_this$label_pos <- NA
for (cs in carbon_sources) {
for (comm in community_names) {
for (sample in unique(plot_this$sample)) {
n <- plot_this$carbon_source==cs & plot_this$community==comm & plot_this$sample==sample
plot_this$label_pos[n] <- cumsum(plot_this$fraction[n]) - 0.5*plot_this$fraction[n]
}
}
}
plot_this$label_pos <- 1 - plot_this$label_pos
# characters as factors
plot_this$carbon_source <- factor(plot_this$carbon_source,levels=c('Glutamine','Citrate'))
plot_this$community <- factor(plot_this$community,levels=community_names)
plot_this$seq_id <- factor(plot_this$seq_id,levels=unique(plot_this$seq_id))
sample_names <- unique(plot_this$sample)
plot_this$sample <- factor(plot_this$sample,levels=sample_names)
# plot pies
myplots[['community-compostion_pieplots-all']] <-
ggplot(data=plot_this,
aes(x="",y=fraction,fill=seq_id)) +
geom_bar(stat="identity",width=1,color='black') +
geom_text(aes(x='',y=label_pos,label=label),color='black',size=3) +
facet_nested(community ~ carbon_source + sample,
switch='y',
labeller=labeller(community=setNames(gsub('Community','Community ',community_names),
community_names))) +
coord_polar(theta="y",start=pi/2) +
theme_void() +
scale_fill_manual(values=pl) +
theme(legend.position='none',
strip.background.x=element_rect(fill='white',
color='black'),
text=element_text(size=15)) +
ylim(0,1)
# plot ranks
myplots[['community-compostion_rankplots']] <-
ggplot(data=plot_this[plot_this$fraction>=1e-4 & plot_this$rank<=20,],
aes(x=rank,y=fraction,
group=interaction(carbon_source,community,sample),
color=carbon_source)) +
geom_line(size=0.5) +
scale_y_continuous(trans='log10',
name='Relative abundance',
limits=10^c(-4,0),
breaks=10^seq(-4,0,by=1),
labels=c(expression(10^-4),
expression(10^-3),
expression(10^-2),
expression(10^-1),
expression(10^0))) +
scale_x_continuous(name='Rank',
limits=c(0,20)) +
scale_color_manual(values=pl_carbon) +
theme_bw() +
theme(panel.grid=element_blank(),
legend.title=element_blank(),
legend.position=c(0.7,0.9),
legend.background=element_rect(fill='transparent'),
text=element_text(size=15),
axis.text=element_text(size=15))
# display and save plots
if (display_plots) {
print(myplots[['community-compostion_pieplots-all']])
print(myplots[['community-compostion_rankplots']])
}
if (save_plots) {
ggsave(file.path('.','plots','community-compostion_pieplots-all.pdf'),
plot=myplots[['community-compostion_pieplots-all']],
device='pdf',
height=297,
width=210,
units='mm')
ggsave(file.path('.','plots','community-compostion_rankplots.pdf'),
plot=myplots[['community-compostion_rankplots']],
device='pdf',
height=70,
width=70,
units='mm')
}
### Juan Diaz-Colunga
### Feb 16 2021
### ----------------------------------------------------------------------
### This script performs all the analyses and produces all the plots
### in the paper.
###    1. Community composition (pie plots & rank plots of ESV frequency)
###    2. Characterization of isolated species from each community
###    3. Matching isolated species to dominants based on sequencing data
###    4. Fractions of isolated species in pairwise competition
###    5. Similarity of coalesced, resident and invasive communities
### ----------------------------------------------------------------------
rm(list=ls())
source('isolates_abundance_from_ESVs.R')
source('myFunctions.R')
library(matlib)
library(testthat)
library(ggplot2)
library(ggh4x)
library(tidyr)
library(RColorBrewer)
# initialize variables to store plots
myplots <- vector(mode='list')
if(!dir.exists('plots')) dir.create('plots')
display_plots <- TRUE
save_plots <- TRUE
# general options
deconvolute_ESVs <- FALSE # should species abundance be estimated from ESV abundance?
### ----------------------------------------------------------------------
### LOAD AND FORMAT DATA
### ----------------------------------------------------------------------
# load OTU table, taxonomy table and metadata
otus <- read.csv('OTU_table.csv',stringsAsFactors=F)
taxa <- read.csv('taxonomy_silva.csv',stringsAsFactors=F)
metadata <- read.csv('metaData.csv',stringsAsFactors=F)
### merge similar taxa?
# merged <- mergeTaxa(otus,taxa)
# otus <- merged[['otus']]
# taxa <- merged[['taxa']]
# check that OTU table and taxonomy table follow the same order
stopifnot(all(otus$X==taxa$X))
# keep only relevant metadata
metadata <- metadata[,c("Sample","Plate","Row","Column","Experiment",
"Comm1","StabilizingCarb1","Comm2","StabilizingCarb2",
"Carbon","Rep","Transfer")]
# assign IDs to each sequence
otus <- cbind(seq_id = paste('seq_',1:nrow(otus),sep=''),
otus)
# normalize OTU abundances (so entries in table represent fractions)
otus[,3:ncol(otus)] <- otus[,3:ncol(otus)]/
matrix(rep(colSums(otus[,3:ncol(otus)]),nrow(otus)),
nrow=nrow(otus),
byrow=T)
# change NAs to 'NA' (character) to ease downstream analysis
metadata[is.na(metadata)] <- 'NA'
otus[is.na(otus)] <- 'NA'
taxa[is.na(taxa)] <- 'NA'
# make a 'well' column in metadata to ease visualization
metadata$Well <- paste(metadata$Row,metadata$Column,sep='')
# names and abbreviations of carbon sources, communities and champions
carbon_sources <- c('Glutamine','Citrate')
carbon_sources_abbr <- c('Gln','Cit')
names(carbon_sources_abbr) <- carbon_sources
community_names <- paste('Community',1:8,sep='')
champion_names <- paste('Champion',1:8,sep='')
### ----------------------------------------------------------------------
### COMMUNITY COMPOSITIONS (PIE PLOTS AND RANK PLOTS)
### ----------------------------------------------------------------------
# initialize vector of community compositions
communities <- vector(mode='list',length=2)
names(communities) <- carbon_sources
for (cs in carbon_sources) {
communities[[cs]] <- vector(mode='list',length=length(community_names))
names(communities[[cs]]) <- community_names
for (comm in community_names) {
communities[[cs]][[comm]] <- data.frame(matrix(nrow=nrow(otus),ncol=0))
rownames(communities[[cs]][[comm]]) <- otus$seq_id
}
}
# map original communities (stabilized for 12 transfers) to communities used for coalescence experiments
original_communities <- vector(mode='list',length=2)
names(original_communities) <- carbon_sources
original_communities[['Glutamine']] <- setNames(paste('Community',c(1,3,5,7,8,10,11,12),sep=''),
community_names)
original_communities[['Citrate']] <- setNames(paste('Community',c(1,2,3,7,8,9,10,11),sep=''),
community_names)
# run through all communities and carbon sources, retrieve community composition from sequencing data
for (cs in carbon_sources) {
for (comm in community_names) {
if (F) { # original communities (before propagation, coalescence etc.)
wells <- metadata[metadata$Comm1 == original_communities[[cs]][comm] &
metadata$Carbon == cs &
(grepl('Gln',metadata$Experiment) | grepl('Cit',metadata$Experiment))
,]
fraction <- otus[,wells$Sample,drop=FALSE]
colnames(fraction) <- 'original'
communities[[cs]][[comm]] <- cbind(communities[[cs]][[comm]],
fraction)
}
if (T) { # communities propagated for 7 days in control of plates C1 (glutamine) and C4 (citrate)
wells <- metadata[metadata$Comm1 == comm &
metadata$Comm2 == 'None' &
metadata$StabilizingCarb1 == cs &
metadata$Carbon == cs &
(grepl('C1',metadata$Experiment) | grepl('C4',metadata$Experiment))
,]
fraction <- otus[,wells$Sample,drop=FALSE]
colnames(fraction) <- 'XvsX-control'
communities[[cs]][[comm]] <- cbind(communities[[cs]][[comm]],
fraction)
}
if (T) { # communities propagated for 7 days in diagonal of plates C1 (glutamine) and C4 (citrate)
wells <- metadata[metadata$Comm1 == comm &
metadata$Comm2 == comm &
metadata$StabilizingCarb1 == cs &
metadata$StabilizingCarb2 == cs &
metadata$Carbon == cs &
(grepl('C1',metadata$Experiment) | grepl('C4',metadata$Experiment))
,]
fraction <- otus[,wells$Sample,drop=FALSE]
colnames(fraction) <- 'XvsX-diagonal'
communities[[cs]][[comm]] <- cbind(communities[[cs]][[comm]],
fraction)
}
if (T) { # communities propagated for 7 days in control of plates C2 (glutamine) and C5 (citrate)
wells <- metadata[metadata$Comm1 == comm &
metadata$Comm2 == 'None' &
metadata$StabilizingCarb1 == cs &
metadata$Carbon == cs &
(grepl('C2',metadata$Experiment) | grepl('C5',metadata$Experiment))
,]
fraction <- otus[,wells$Sample,drop=FALSE]
colnames(fraction) <- 'XvsM-control'
communities[[cs]][[comm]] <- cbind(communities[[cs]][[comm]],
fraction)
}
if (F) { # communities propagated for 7 days in control of plates C7 (glutamine) and C8 (citrate)
wells <- metadata[metadata$Comm1 == comm &
metadata$Comm2 == 'None' &
metadata$StabilizingCarb1 == cs &
metadata$Carbon ==cs &
(grepl('C7',metadata$Experiment) | grepl('C8',metadata$Experiment))
,]
fraction <- otus[,wells$Sample,drop=FALSE]
colnames(fraction) <- 'GlnXvsCitX-control'
communities[[cs]][[comm]] <- cbind(communities[[cs]][[comm]],
fraction)
}
}
}
# initialize data frame for pie plots and rank plots
plot_this <- data.frame(carbon_source=character(0),
community=character(0),
sample=character(0),
seq_id=character(0),
fraction=numeric(0))
# run through all communities in all carbon sources and structure plotting data frame
for (cs in carbon_sources) {
for (comm in community_names) {
attach_this <- gather(communities[[cs]][[comm]],
sample,fraction,colnames(communities[[cs]][[comm]]))
attach_this <- data.frame(carbon_source=cs,
community=comm,
sample=attach_this$sample,
seq_id=otus$seq_id,
fraction=attach_this$fraction)
plot_this <- rbind(plot_this,attach_this)
}
}
# remove sequences with frequency 0 in all samples from the plotting data frame
remove_these <- sapply(otus$seq_id,
function(seq_id) {
all(plot_this$fraction[plot_this$seq_id == seq_id] == 0)
})
remove_these <- otus$seq_id[remove_these]
plot_this <- plot_this[!(plot_this$seq_id %in% remove_these),]
# ranks
plot_this$rank <- NA
for (cs in carbon_sources) {
for (comm in community_names) {
for (sample in unique(plot_this$sample)) {
n <- plot_this$carbon_source==cs & plot_this$community==comm & plot_this$sample==sample
plot_this$rank[n] <- rank(1 - plot_this$fraction[n],ties.method='random')
}
}
}
plot_this$rank[plot_this$fraction < 1e-4] <- NA
# plot: color palette
set.seed(23) # this gives the nicest colors in the pie plots
pl <- brewer.pal(8, "Set1")
pl <- sample(colorRampPalette(pl)(nrow(otus)))
pl_carbon <- c('#d7191c','#2c7bb6')
names(pl_carbon) <- carbon_sources
# show fractions in pies
plot_this$label <- paste(100*round(plot_this$fraction,digits=2),'%',sep='')
plot_this$label[plot_this$fraction < 0.1] <- ' '
# fraction labels positioning
plot_this$label_pos <- NA
for (cs in carbon_sources) {
for (comm in community_names) {
for (sample in unique(plot_this$sample)) {
n <- plot_this$carbon_source==cs & plot_this$community==comm & plot_this$sample==sample
plot_this$label_pos[n] <- cumsum(plot_this$fraction[n]) - 0.5*plot_this$fraction[n]
}
}
}
plot_this$label_pos <- 1 - plot_this$label_pos
# characters as factors
plot_this$carbon_source <- factor(plot_this$carbon_source,levels=c('Glutamine','Citrate'))
plot_this$community <- factor(plot_this$community,levels=community_names)
plot_this$seq_id <- factor(plot_this$seq_id,levels=unique(plot_this$seq_id))
sample_names <- unique(plot_this$sample)
plot_this$sample <- factor(plot_this$sample,levels=sample_names)
# plot pies
myplots[['community-compostion_pieplots-all']] <-
ggplot(data=plot_this,
aes(x="",y=fraction,fill=seq_id)) +
geom_bar(stat="identity",width=1,color='black') +
geom_text(aes(x='',y=label_pos,label=label),color='black',size=3) +
facet_nested(community ~ carbon_source + sample,
switch='y',
labeller=labeller(community=setNames(gsub('Community','Community ',community_names),
community_names))) +
coord_polar(theta="y",start=pi/2) +
theme_void() +
scale_fill_manual(values=pl) +
theme(legend.position='none',
strip.background.x=element_rect(fill='white',
color='black'),
text=element_text(size=15)) +
ylim(0,1)
# plot ranks
myplots[['community-compostion_rankplots']] <-
ggplot(data=plot_this[plot_this$fraction>=1e-4 & plot_this$rank<=20,],
aes(x=rank,y=fraction,
group=interaction(carbon_source,community,sample),
color=carbon_source)) +
geom_line(size=0.25) +
scale_y_continuous(trans='log10',
name='Relative abundance',
limits=10^c(-4,0),
breaks=10^seq(-4,0,by=1),
labels=c(expression(10^-4),
expression(10^-3),
expression(10^-2),
expression(10^-1),
expression(10^0))) +
scale_x_continuous(name='Rank',
limits=c(0,20)) +
scale_color_manual(values=pl_carbon) +
theme_bw() +
theme(panel.grid=element_blank(),
legend.title=element_blank(),
legend.position=c(0.6,0.9),
legend.background=element_rect(fill='transparent'),
text=element_text(size=15),
axis.text=element_text(size=15))
# display and save plots
if (display_plots) {
print(myplots[['community-compostion_pieplots-all']])
print(myplots[['community-compostion_rankplots']])
}
if (save_plots) {
ggsave(file.path('.','plots','community-compostion_pieplots-all.pdf'),
plot=myplots[['community-compostion_pieplots-all']],
device='pdf',
height=297,
width=210,
units='mm')
ggsave(file.path('.','plots','community-compostion_rankplots.pdf'),
plot=myplots[['community-compostion_rankplots']],
device='pdf',
height=70,
width=70,
units='mm')
}
# plot ranks
myplots[['community-compostion_rankplots']] <-
ggplot(data=plot_this[plot_this$fraction>=1e-4 & plot_this$rank<=20,],
aes(x=rank,y=fraction,
group=interaction(carbon_source,community,sample),
color=carbon_source)) +
geom_line(size=0.25) +
scale_y_continuous(trans='log10',
name='Relative abundance',
limits=10^c(-4,0),
breaks=10^seq(-4,0,by=1),
labels=c(expression(10^-4),
expression(10^-3),
expression(10^-2),
expression(10^-1),
expression(10^0))) +
scale_x_continuous(name='Rank',
limits=c(0,20)) +
scale_color_manual(values=pl_carbon) +
theme_bw() +
theme(panel.grid=element_blank(),
legend.title=element_blank(),
legend.position=c(0.6,0.9),
legend.background=element_rect(fill='transparent'),
text=element_text(size=15),
axis.text=element_text(size=15),
axis.line=element_line(size=0.25),
axis.ticks=element_line(size=0.25))
ggsave(file.path('.','plots','community-compostion_rankplots.pdf'),
plot=myplots[['community-compostion_rankplots']],
device='pdf',
height=70,
width=70,
units='mm')
myplots[['community-compostion_rankplots']] <-
ggplot(data=plot_this[plot_this$fraction>=1e-4 & plot_this$rank<=20,],
aes(x=rank,y=fraction,
group=interaction(carbon_source,community,sample),
color=carbon_source)) +
geom_line(size=0.25) +
scale_y_continuous(trans='log10',
name='Relative abundance',
limits=10^c(-4,0),
breaks=10^seq(-4,0,by=1),
labels=c(expression(10^-4),
expression(10^-3),
expression(10^-2),
expression(10^-1),
expression(10^0))) +
scale_x_continuous(name='Rank',
limits=c(0,20)) +
scale_color_manual(values=pl_carbon) +
theme_bw() +
theme(panel.grid=element_blank(),
legend.title=element_blank(),
legend.position=c(0.6,0.9),
legend.background=element_rect(fill='transparent'),
text=element_text(size=15),
axis.text=element_text(size=15),
axis.line=element_line(size=0.1),
axis.ticks=element_line(size=0.1))
ggsave(file.path('.','plots','community-compostion_rankplots.pdf'),
plot=myplots[['community-compostion_rankplots']],
device='pdf',
height=70,
width=70,
units='mm')
ggsave(file.path('.','plots','community-compostion_rankplots.pdf'),
plot=myplots[['community-compostion_rankplots']],
device='pdf',
height=70,
width=70,
units='mm')
myplots[['community-compostion_rankplots']] <-
ggplot(data=plot_this[plot_this$fraction>=1e-4 & plot_this$rank<=20,],
aes(x=rank,y=fraction,
group=interaction(carbon_source,community,sample),
color=carbon_source)) +
geom_line(size=0.25) +
scale_y_continuous(trans='log10',
name='Relative abundance',
limits=10^c(-4,0),
breaks=10^seq(-4,0,by=1),
labels=c(expression(10^-4),
expression(10^-3),
expression(10^-2),
expression(10^-1),
expression(10^0))) +
scale_x_continuous(name='Rank',
limits=c(0,20)) +
scale_color_manual(values=pl_carbon) +
theme_bw() +
theme(panel.grid=element_blank(),
legend.title=element_blank(),
legend.position=c(0.6,0.9),
legend.background=element_rect(fill='transparent'),
text=element_text(size=15),
axis.text=element_text(size=15),
axis.line=element_line(size=0.25),
axis.ticks=element_line(size=0.25),
panel.border=element_rect(size=0.25))
ggsave(file.path('.','plots','community-compostion_rankplots.pdf'),
plot=myplots[['community-compostion_rankplots']],
device='pdf',
height=70,
width=70,
units='mm')
myplots[['community-compostion_rankplots']] <-
ggplot(data=plot_this[plot_this$fraction>=1e-4 & plot_this$rank<=20,],
aes(x=rank,y=fraction,
group=interaction(carbon_source,community,sample),
color=carbon_source)) +
geom_line(size=0.25) +
scale_y_continuous(trans='log10',
name='Relative abundance',
limits=10^c(-4,0),
breaks=10^seq(-4,0,by=1),
labels=c(expression(10^-4),
expression(10^-3),
expression(10^-2),
expression(10^-1),
expression(10^0))) +
scale_x_continuous(name='Rank',
limits=c(0,20)) +
scale_color_manual(values=pl_carbon) +
theme_bw() +
theme(panel.grid=element_blank(),
legend.title=element_blank(),
legend.position=c(0.6,0.9),
legend.background=element_rect(fill='transparent'),
text=element_text(size=15),
axis.text=element_text(size=15),
axis.line=element_blank(), #axis.line=element_line(size=0.25),
axis.ticks=element_line(size=0.25),
panel.border=element_rect(size=0.25))
ggsave(file.path('.','plots','community-compostion_rankplots.pdf'),
plot=myplots[['community-compostion_rankplots']],
device='pdf',
height=70,
width=70,
units='mm')
